unmanaged implementation in class zbp_i_student_u unique;
strict ( 2 );

with draft;

define behavior for ZI_STUDENT_U alias Student
//late numbering
draft table zstudentsu_draft
early numbering
lock master
total etag Lastchangedat  //used only with draft enabled
authorization master ( instance )
etag master Lastchangedat
{
  create;
  update ( features : instance );
  delete ( features : instance );
  field ( readonly ) Studentid;

  association _course { create; with draft; }

  draft action Edit;
  draft action Resume;
  draft action Activate optimized;
  draft action Discard;

  field ( mandatory ) studentname, Studentage;

  validation validatefields on save { create; update; }  //validations
  //Determinations - if you want to change the value of one field based on other field then Determinations will be used
  // Determinations will be used on - ON MODIFY, ON SAVE
  //If you use determinations with ON SAVE then determinations should be added in draft determine action Prepare
  //If you used determinatinos with ON MODIFY then determination name no need to add in draft determine action Prepare
  //If you want to change the value in live mode then Determinations(ON MODIFY) +  Side effects will be used
  // In Projection view also add - use side effects syntax
  determination updateSectionBasedOnClass on modify { field Studentclass; }  //determination with ON MODIFY
  side effects { field Studentclass affects field Studentsection ; }  // Side effects used to update field value immediatly on screen

  determination updateSchoolBasedOnSection on save { field Studentsection; }  // determination with ON SAVE- now this needs to added in draft determine action Prepare

  draft determine action Prepare  //Prepare is standard name
  {
    validation validatefields;
    determination updateSchoolBasedOnSection;
  }

//  draft determine action Prepare - executes Determinations and Actions, used to validate the draft data before saving in draft table

  mapping for zstudents_u control zstr_students //control structure indicates which fields are changed in update. zstr_students is the structure of boolean type.
    {

      //zstudents_u is database table name
      Schoolname     = schoolname;
      Studentage     = studentage;
      Studentclass   = studentclass;
      Studentid      = studentid;
      Studentname    = studentname;
      Studentsection = studentsection;
      Status         = status;
      Gender         = gender;
      GenderDesc     = genderdesc;
      Lastchangedat  = lastchangedat;
      Fee            = fee;
    }
}

define behavior for ZI_COURSEU alias Course
//late numbering
early numbering
draft table ztabcourse_draft
lock dependent by _student
authorization dependent by _student
etag dependent by _student
//etag master <field_name>
{
  update;
  delete;
  field ( readonly ) Studentid, Course, Semester;
  association _student { with draft; }

  mapping for ztab_course_u
    {

      //ztab_course_u is DB Table
      Course    = course;
      Semester  = semester;
      Semresult = semresult;
      Studentid = studentid;
    }
}